# FROM EPICS TO PYTHON

record(ao, "$(P)$(R)wavelength") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.wavelength='VAL'")
}

record(ao, "$(P)$(R)geom") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.geom='VAL'")
}

record(ao, "$(P)$(R)latticea1") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[0]='VAL'")
}

record(ao, "$(P)$(R)latticea2") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[1]='VAL'")
}

record(ao, "$(P)$(R)latticea3") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[2]='VAL'")
}

record(ao, "$(P)$(R)latticealpha") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[3]='VAL'")
}

record(ao, "$(P)$(R)latticebeta") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[4]='VAL'")
}

record(ao, "$(P)$(R)latticegamma") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[5]='VAL'")
}

record(ao, "$(P)$(R)realaxesmu") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_mu='VAL'")
}

record(ao, "$(P)$(R)realaxesomega") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_omega='VAL'")
}

record(ao, "$(P)$(R)realaxeschi") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_chi='VAL'")
}

record(ao, "$(P)$(R)realaxesphi") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_phi='VAL'")
}

record(ao, "$(P)$(R)realaxesgamma") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_gamma='VAL'")
}

record(ao, "$(P)$(R)realaxesdelta") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.realaxes_delta='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesh") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_h='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesk") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_k='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesl") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_l='VAL'")
}

record(ao, "$(P)$(R)pseudoaxespsi") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_psi='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesq") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_q='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesalpha") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_alpha='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesqper") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_qper='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesqpar") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_qpar='VAL'")
}

record(ao, "$(P)$(R)pseudoaxestth") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_tth='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesincidence") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_incidence='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesazimuth") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_azimuth='VAL'")
}

record(ao, "$(P)$(R)pseudoaxesemergence") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.pseudoaxes_emergence='VAL'")
}

# FROM PYTHON TO EPICS
record(ai, "$(P)$(R)in:pseudoaxesh") {
#    field(PINI, "YES")
    field(DTYP, "pydev")
    field(INP, "@hkl_calc.pseudoaxes_h")
#    field(SCAN, "I/O Intr")
    field(SCAN, "1 second")
}

record(ai, "$(P)$(R)in:pseudoaxesk") {
#    field(PINI, "YES")
    field(DTYP, "pydev")
    field(INP, "@hkl_calc.pseudoaxes_k")
#    field(SCAN, "I/O Intr")
#    field(SCAN, "1 second")
}

record(ai, "$(P)$(R)in:pseudoaxesl") {
#    field(PINI, "YES")
    field(DTYP, "pydev")
    field(INP, "@hkl_calc.pseudoaxes_l")
#    field(SCAN, "I/O Intr")
#    field(SCAN, "1 second")
}

