# FROM EPICS TO PYTHON

record(ao, "$(P)$(R)wlen") {
    field(DESC, "wavelength (nm)")
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.wavelength='VAL'")
}

#record(ao, "$(P)$(R)geom") {
#    field(PINI, "YES")
#    field(DTYP, "pydev")
#    field(OUT, "@hkl_calc.geom='VAL'")
#}

record(ao, "$(P)$(R)latticea1") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[0]='VAL'")
}

record(ao, "$(P)$(R)latticea2") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[1]='VAL'")
}

record(ao, "$(P)$(R)latticea3") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[2]='VAL'")
}

record(ao, "$(P)$(R)latticealpha") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[3]='VAL'")
}

record(ao, "$(P)$(R)latticebeta") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[4]='VAL'")
}

record(ao, "$(P)$(R)latticegamma") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(OUT, "@hkl_calc.lattice[5]='VAL'")
}

# temporary
record(mbbo, "$(P)$(R)geom") {
    field(PINI, "YES")
    field(DTYP, "pydev")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(ZRST, "E4CV")
    field(ONST, "K6C")
    field(TWST, "E4CV")
    field(THST, "E4CV")
    field(FRST, "E4CV")
    field(FVST, "E4CV")
    field(SXST, "E4CV")
    field(OUT, "@hkl_calc.geom")
}

#record(mbbo, "$(P)$(R)geom_RBV") {
#    field(PINI, "YES")
#    field(DTYP, "Raw Soft Channel")
#    field(ZRVL, "0")
#    field(ONVL, "1")
#    field(TWVL, "2")
#    field(THVL, "3")
#    field(FRVL, "4")
#    field(FVVL, "5")
#    field(SXVL, "6")
#    field(ZRST, "Cubic")
#    field(ONST, "Tetragonal")
#    field(TWST, "Orthohombic")
#    field(THST, "Hexagonal")
#    field(FRST, "Rhombohedral")
#    field(FVST, "Monoclinic")
#    field(SXST, "Triclinic")
#    field(INP, "@hkl_calc.geom")
#    #field(FLNK, "")
#}

